heat_template_version: 2015-10-15

description: |
   ### Using heat to run certbot and get a valid SSL certificate
   ### this is a demo of OS::Heat::SoftwareConfig
   ### and OS::Heat::SoftwareDeployment resources

parameter_groups:

- label: Server Settings
  parameters:
    - serverName
    - serverImage
    - serverFlavor

- label: DNS settings
  parameters:
    - aRecord

parameters:

#begin server params

  serverName:
    type: string
    label: 'Name of new server'
    default: 'letsencrypt-00'

  serverImage:
    type: string
    default: 'CentOS 7 (PVHVM) (Orchestration)'
    label: Server image label
    description: Image with which to build server

  serverFlavor:
    type: string
    default: 1 GB General Purpose v1
    label: Server flavor
    description: Must be a valid Rackspace Cloud Flavor
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - 15 GB I/O v1
      - 30 GB I/O v1
      description: must be a valid Rackspace Cloud Server flavor.

# begin DNS params
  aRecord:
    type: string
    default: heat00.rackesc.net
    label: DNS A record for server
    description: DNS A record for server

resources:

#begin server resources

  serverPass:
      type: OS::Heat::RandomString

  serverInstance:
    type: OS::Nova::Server
    properties:
      name: { get_param: serverName }
      admin_pass: { get_attr: [ serverPass, value ] }
      flavor: { get_param: serverFlavor }
      image: { get_param: serverImage }
      config_drive: True
      metadata:
        created_by: cn_orch_template
      networks:
        - network: '00000000-0000-0000-0000-000000000000'
        - network: '11111111-1111-1111-1111-111111111111'

  serverPackages:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        packages:
          - httpd
          - mod_ssl
          - php-fpm
          - iptables-services
          - iptables-utils

#begin DNS resources
  dnsRecord:
    type: Rackspace::Cloud::DNS
    properties:
      emailAddress: rack@rackesc.net
      name: rackesc.net
      records:
        - type: A
          data: { get_attr: [serverInstance, accessIPv4 ]}
          name: heat00.rackesc.net

outputs:
  serverPassDisplay:
    value: { get_attr: [serverPass, value ] }
    description: 'Admin Password of Instance'
