heat_template_version: 2015-10-15

description: |
   ### Using heat to run acme.sh
   ### and get a valid SSL certificate
   ### cloud-init instead of CFN style

parameter_groups:

- label: Domain settings
  parameters:
    - domainToSecure
    - emailAddr

parameters:

# begin domain params
  domainToSecure:
    type: string
    default: example.rackesc.net
    label: Domain that will receive the letsencrypt cert. DNS must be hosted in Rackspace Cloud.
    description: Domain that will receive the letsencrypt cert. DNS must be hosted in Rackspace Cloud.

  emailAddr:
    type: string
    default: nobody@noone.net
    label: email address for Rackspace DNS record, letsencrypt account, and Cloud Monitoring notifications

resources:

#begin server resources

  serverPass:
      type: OS::Heat::RandomString

  serverInstance:
    type: OS::Nova::Server
    properties:
      name: acme.sh
      admin_pass: { get_attr: [ serverPass, value ] }
      flavor: general1-1
      image: 'CentOS 7 (PVHVM)'
      config_drive: True
      user_data: {get_resource: acme}
      metadata:
        created_by: cn_orch_template
      networks:
        - network: '00000000-0000-0000-0000-000000000000'
        - network: '11111111-1111-1111-1111-111111111111'

  acme:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config:
        str_replace:
          template: |
                    #!/usr/bin/env bash
                    # get-dns-challenge-with-acme.sh
                    # clones acme.sh from the repo and sets up the challenge
                    # author: Brian King
                    # copyright: 2019
                    # license: Apache
                    # making dir manually due to https://github.com/Neilpang/acme.sh/issues/2223
                    mkdir -p /root/.acme.sh
                    touch /root/.acme.sh/account.conf
                    pkgs="git"
                    yum -q -y install $pkgs > /dev/null 2>&1
                    git clone https://github.com/Neilpang/acme.sh.git /root/acme.sh/ > /dev/null 2>&1
                    cd /root/acme.sh
                    ./acme.sh --debug --issue --dns -d $domain  --accountemail $email --yes-I-know-dns-manual-mode-enough-go-ahead-please 2>&1 | tee /tmp/results
                    grep "TXT value" /tmp/results | awk -F\' '{print $2}'
          params:
            $domain: { get_param: domainToSecure }
            $email:  { get_param: emailAddr }



outputs:
  serverPassDisplay:
    value: { get_attr: [serverPass, value ] }
    description: 'Admin Password of Instance'

  serverIPv4Display:
    value: { get_attr: [serverInstance, accessIPv4 ] }
    description: 'IPv4 of server'
